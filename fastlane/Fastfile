# Customise this file, documentation can be found here:
# https://github.com/fastlane/fastlane/tree/master/fastlane/docs
# All available actions: https://docs.fastlane.tools/actions
# can also be listed using the `fastlane actions` command

# Change the syntax highlighting to Ruby
# All lines starting with a # are ignored when running `fastlane`

# If you want to automatically update fastlane if a new version is available:
# update_fastlane

# This is the minimum version number required.
# Update this, if you use features of a newer version
fastlane_version "2.56.0"

default_platform :ios

platform :ios do
  $lane_active = ""
  before_all do
    # ENV["SLACK_URL"] = "https://hooks.slack.com/services/..."
    skip_docs
  end

  desc "Runs all the tests"
  lane :test do
    $lane_active = "Test"
    scan(
      workspace: "FlyveMDMInventoryAgent.xcworkspace",
      scheme: "FlyveMDMInventoryAgent",
      clean: true,
      code_coverage: true
    )
  end

  desc "Run code coverage with xcov"
  lane :coverage do
    $lane_active = "Coverage"
    xcov(
      workspace: "FlyveMDMInventoryAgent.xcworkspace",
      scheme: "FlyveMDMInventoryAgent",
      output_directory: "coverage",
      html_report: false,
      json_report: true,
      only_project_targets: true
    )
    xcov_report    
  end

  desc "Submit a new Beta Build to Apple TestFlight"
  desc "This will also make sure the profile is up to date"
  lane :beta do
    $lane_active = "Beta"
    # Fetch provisioning profile
    # sigh
    sigh(
      adhoc: false, 
      username: "hrondon@teclib.com",
      team_id: "H7XJV96LX2",
      provisioning_name: "XC_iOS_orgflyveinventoryagent",
      cert_id: "H7XJV96LX2"
    )
  
    # Build
    gym(
      scheme: "FlyveMDMInventoryAgent",
      configuration: "Beta",
      sdk: "iphoneos10.3",
      clean: true,
      include_bitcode: true,
      include_symbols: true,
      export_method: "app-store",
      buildlog_path: 'fastlane/logs'
    )

    # TestFlight upload
    pilot(
      app_identifier: "org.flyve.inventory.agent",
      skip_waiting_for_build_processing: true
    )
  end

  desc "builds and packages iOS apps"
  lane :archive do
    # Fetch provisioning profile
    # sigh
    sigh(
      adhoc: false, 
      username: "hrondon@teclib.com",
      team_id: "H7XJV96LX2",
      provisioning_name: "XC_iOS_orgflyveinventoryagent",
      cert_id: "H7XJV96LX2"
    )
    snapshot
    # Build
    gym(
      scheme: "FlyveMDMInventoryAgent",
      configuration: "Release",
      sdk: "iphoneos10.3",
      clean: true,
      include_bitcode: true,
      include_symbols: true,
      export_method: "app-store",
      buildlog_path: 'fastlane/logs'
    )
  end

  desc "publish in app store"
  lane :publish do
    deliver(force: true)
    frameit
  end

  desc "Deploy a new version to the App Store"
  lane :release do
    $lane_active = "Release"
    # Fetch provisioning profile
    # sigh
    sigh(
      adhoc: false, 
      username: "hrondon@teclib.com",
      team_id: "H7XJV96LX2",
      provisioning_name: "XC_iOS_orgflyveinventoryagent",
      cert_id: "H7XJV96LX2"
    )
    snapshot
    # Build
    gym(
      scheme: "FlyveMDMInventoryAgent",
      configuration: "Release",
      sdk: "iphoneos10.3",
      clean: true,
      include_bitcode: true,
      include_symbols: true,
      export_method: "app-store",
      buildlog_path: 'fastlane/logs'
    )
    deliver(force: true)
    frameit
  end

  after_all do |lane|
    telegram(
        url_horn: ENV["TELEGRAM_WEBHOOKS"],
        message: $lane_active + " Fastlane is OK"
    )
  end

  error do |lane, exception|
    telegram(
        url_horn: ENV["TELEGRAM_WEBHOOKS"],
        message: "`ERROR` " + $lane_active + " Fastlane FAIL"
    )
  end
end


# More information about multiple platforms in fastlane: https://github.com/fastlane/fastlane/blob/master/fastlane/docs/Platforms.md
# All available actions: https://docs.fastlane.tools/actions

# fastlane reports which actions are used. No personal data is recorded. 
# Learn more at https://github.com/fastlane/fastlane#metrics
